/* Generated by AN DISI Unibo */ 
package it.unibo.datahandler

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Datahandler ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		val interruptedStateTransitions = mutableListOf<Transition>()
		 var StartTime = 0L  
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						CommUtils.outcyan("$name in ${currentState.stateName} | $currentMsg | ${Thread.currentThread().getName()} n=${Thread.activeCount()}")
						 	   
						ut.showcNumCpus(  )
						StartTime = getCurrentTime()
						forward("start", "start(do)" ,"w1" ) 
						forward("start", "start(do)" ,"w2" ) 
						forward("start", "start(do)" ,"w3" ) 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t00",targetState="handleAlarm",cond=whenEvent("alarm"))
				}	 
				state("handleAlarm") { //this:State
					action { //it:State
						CommUtils.outblue("$name in ${currentState.stateName} | $currentMsg | ${Thread.currentThread().getName()} n=${Thread.activeCount()}")
						 	   
						 var Elapsed = 0L  
						Elapsed = getDuration(StartTime)
						StartTime = getCurrentTime()
						CommUtils.outcyan("$name alarm after $Elapsed")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
				 	 		stateTimer = TimerActor("timer_handleAlarm", 
				 	 					  scope, context!!, "local_tout_datahandler_handleAlarm", 2500.toLong() )
					}	 	 
					 transition(edgeName="t01",targetState="end",cond=whenTimeout("local_tout_datahandler_handleAlarm"))   
					transition(edgeName="t02",targetState="handleAlarm",cond=whenEvent("alarm"))
				}	 
				state("end") { //this:State
					action { //it:State
						 var Elapsed = 0L  
						Elapsed = getDuration(StartTime)
						CommUtils.outblue("$name ENDS duration=$Elapsed")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
				}	 
			}
		}
}
